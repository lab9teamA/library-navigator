# Generated by Django 2.2.26 on 2022-03-25 14:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('ISBN', models.CharField(max_length=13, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=100)),
                ('coverImage', models.ImageField(null=True, upload_to='book_cover_images')),
                ('checkedOut', models.BooleanField(default=False)),
                ('numCheckedOut', models.IntegerField(default=0)),
                ('publishDate', models.DateField()),
                ('numberOfPage', models.IntegerField()),
                ('description', models.CharField(max_length=1000)),
                ('likes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('number', models.IntegerField(primary_key=True, serialize=False)),
                ('mapName', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, default='profile_images/NONE.jpg', upload_to='profile_images')),
                ('website', models.URLField(blank=True)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('favouriteFloor', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='libnav.Floor')),
                ('friends', models.ManyToManyField(blank=True, related_name='user_friends', to=settings.AUTH_USER_MODEL)),
                ('isReading', models.ManyToManyField(blank=True, related_name='user_isReading', to='libnav.Book')),
                ('likes', models.ManyToManyField(blank=True, related_name='user_likes', to='libnav.Book')),
                ('recommends', models.ManyToManyField(blank=True, related_name='user_recommends', to='libnav.Book')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_user', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bookcase',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='libnav.Floor')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='bookcase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='libnav.Bookcase'),
        ),
        migrations.AddField(
            model_name='book',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='book_subjects', to='libnav.Subject'),
        ),
    ]
